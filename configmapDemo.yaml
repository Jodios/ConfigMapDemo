kind: ConfigMap
apiVersion: v1
metadata:
  name: configmapdemo
  namespace: prod
data:
  varA: "testingA"
  varB: "testingB"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: configmapdemo
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: configmapdemo
  template:
    metadata:
      labels:
        app: configmapdemo 
    spec:
      containers:
        - name: configmapdemo
          image: #{deployment.image.name}#
          ports:
            - name: http-api
              containerPort: 8081
              protocol: TCP
          envFrom:
            - configMapRef:
                name: configmapdemo
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
---
kind: Service
apiVersion: v1
metadata:
  name: configmapdemo
  namespace: prod
  labels:
    version: 0.1.203643-1
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/port: "8081"
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: 8081
      protocol: TCP
  selector:
    app: configmapdemo
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: configmapdemo
  namespace: prod
spec:
  rules:
    - host: configmapdemo.jodios.com
      http:
        paths:
          - backend:
              serviceName: configmapdemo
              servicePort: 8081